// <auto-generated />
using System;
using BookApp.Models.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240117093338_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("BookApp.Models.Entitys.Concrete.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHome")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PageCount")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Books", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Abstract = "",
                            CreatedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(7258),
                            ImageURL = "ogrenci-kiz-1.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(7260),
                            Name = "Öğrenci Kız",
                            PageCount = 99,
                            Price = 145m,
                            Stock = 120,
                            URL = "ogrenci-kiz-1"
                        },
                        new
                        {
                            ID = 2,
                            Abstract = "",
                            CreatedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(7269),
                            ImageURL = "homo-deus-2.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(7270),
                            Name = "Homo Deus",
                            PageCount = 299,
                            Price = 215m,
                            Stock = 20,
                            URL = "homo-deus-2"
                        },
                        new
                        {
                            ID = 3,
                            Abstract = "",
                            CreatedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(7272),
                            ImageURL = "efendi-uyaniyor-3.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            ModifiedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(7272),
                            Name = "Efendi Uyanıyor",
                            PageCount = 316,
                            Price = 185m,
                            Stock = 78,
                            URL = "efendi-uyaniyor-3"
                        },
                        new
                        {
                            ID = 4,
                            Abstract = "",
                            CreatedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(7274),
                            ImageURL = "evrenin-sonundaki-restoran-3.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(7274),
                            Name = "Evrenin Sonundaki Restoran",
                            PageCount = 149,
                            Price = 153m,
                            Stock = 76,
                            URL = "evrenin-sonundaki-restoran"
                        },
                        new
                        {
                            ID = 5,
                            Abstract = "",
                            CreatedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(7275),
                            ImageURL = "beyaz-kurt-5.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = true,
                            ModifiedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(7276),
                            Name = "Beyaz Kurt",
                            PageCount = 123,
                            Price = 223m,
                            Stock = 156,
                            URL = "beyaz-kurt"
                        });
                });

            modelBuilder.Entity("BookApp.Models.Entitys.Concrete.BookCategory", b =>
                {
                    b.Property<int>("BookID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookID", "CategoryID");

                    b.ToTable("BookCategories", (string)null);

                    b.HasData(
                        new
                        {
                            BookID = 1,
                            CategoryID = 1
                        },
                        new
                        {
                            BookID = 1,
                            CategoryID = 2
                        },
                        new
                        {
                            BookID = 1,
                            CategoryID = 3
                        },
                        new
                        {
                            BookID = 2,
                            CategoryID = 3
                        },
                        new
                        {
                            BookID = 2,
                            CategoryID = 5
                        },
                        new
                        {
                            BookID = 3,
                            CategoryID = 2
                        },
                        new
                        {
                            BookID = 3,
                            CategoryID = 4
                        },
                        new
                        {
                            BookID = 3,
                            CategoryID = 5
                        },
                        new
                        {
                            BookID = 4,
                            CategoryID = 3
                        },
                        new
                        {
                            BookID = 5,
                            CategoryID = 1
                        },
                        new
                        {
                            BookID = 5,
                            CategoryID = 2
                        },
                        new
                        {
                            BookID = 5,
                            CategoryID = 4
                        },
                        new
                        {
                            BookID = 5,
                            CategoryID = 5
                        });
                });

            modelBuilder.Entity("BookApp.Models.Entitys.Concrete.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(6172),
                            Description = "Genel kategorisine sahip ve kategorisiz kitaplar burada olacak",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(6185),
                            Name = "Genel",
                            URL = "genel"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(6188),
                            Description = "Bilim kurgu kitapları",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(6189),
                            Name = "Bilim Kurgu",
                            URL = "bilim-kurgu"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(6190),
                            Description = "Distopik kitaplar",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(6190),
                            Name = "Distopya",
                            URL = "distopya"
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(6191),
                            Description = "Bilim ve Mühendislik Kitapları",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(6192),
                            Name = "Bilim Ve Mühendislik",
                            URL = "bilim-ve-muhendislik"
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(6192),
                            Description = "Dünya tarihi ile ilgili kitaplar",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2024, 1, 17, 12, 33, 38, 718, DateTimeKind.Local).AddTicks(6193),
                            Name = "Dünya Tarihi",
                            URL = "dunya-tarihi"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
